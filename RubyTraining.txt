ruby -e 'puts 123'
123

ruby simplefile.rb 
123
345
678

irb (Interactive Ruby Shell )
2.6.1 :001 > 1+1
 => 2 
2.6.1 :002 > puts "himanshu"
himanshu
 => nil (retrun type)

-to get exit from irb use  command => exit

-irb --simple-prompt
>>


1) Integer Method in ruby
   
  100.class
 => Integer 


=Next, abs etc Method
   30.next
 => 31 

2)Float

2.6.1 :005 > 9/3.0
 => 3.0 
 100/33.0
 => 3.0303030303030303 

i)round ,to_i (convert to integer), floor, ceil etc. method with 
  float type data type

 12.9922.round
 => 13 

 12.3324.to_i
 => 12 

 123.343.ceil
 => 124 

 x=22.22
 => 22.22 

 x
 => 22.22 

 x.floor
 => 22 
 
 213.23.class
 => Float 


3) *STRING*

>> x="Himanshu"
=> "Himanshu"
>> x
=> "Himanshu"

>> y="Gautam"
=> "Gautam"

Concatenation >> z=x+" "+y
=> "Himanshu Gautam"

Append
>> a="Hello"
=> "Hello"

>> a<<" " 
=> "Hello "

>> a<<"World!"
=> "Hello World!"

Multiplication ="1 " *3
=> "1 1 1 "

Some Methods of String
a.reverse
=> "!dlroW olleH"
>> a.capitalize
=> "Hello world!"
>> a.upcase
=> "HELLO WORLD!"
>> a.length
=> 12


STRING ESCAPING

'let\'s escape'
=> "let's escape"

STRING COTROL CHARACTER (work with only double cots)
  puts "\ts\tv\nv\td"
	s	v
v	d


String Interpolation

>> msg
=> "I love you"
>> puts "I just called to say: #{msg}."
I just called to say: I love you.
=> nil

////////////////////////////////////////

#TYPE CONVERSION

1) 9.to_c -> complex
   >> 9.to_c
   => (9+0i)

2) .to_f -> Float
   >> 33.to_f
   => 33.0

3).to_i  -Integer(base 10)
   >> "hello".to_i
  => 0
  >> "12424234".to_i
  => 12424234 

  a)>> "123".to_i(2)  #base 2
   => 1
   >> "1222".to_i(16) #base 16
   => 4642

4)to_r â†’ rational
  >> 34/2.to_r
  => (17/1)
  
  >> "0.3".to_r
  => (3/10)


#########################################################
 Returning multiple lines in ruby
 string = "line #1"\
         "line #2"\
         "line #3"

 string # => "line #1line #2line #3"

#working of multiple methods together
 >> work="hey baby  how are  You"
 => "hey baby  how are  You"
 >> work.squeeze(' ').split(' ').map(&:capitalize).join
 => "HeyBabyHowAreYou"



