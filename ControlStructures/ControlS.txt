*CONTROL STRUCTURES*
-Add dynamism to code
-Determine Circumstances when code executes
-Conditionals
-Loops
-Iterators

#Conditionals: if-elseif-else

1)_tmp = expr0
if expr1 === _tmp || expr2 === _tmp
   stmt1
elsif expr3 === _tmp || expr4 === _tmp
   stmt2
else
   stmt3
end

 2)if count > 10
  puts "Try again"
elsif tries == 3
  puts "You lose"
else
  puts "Enter a number"
end

3)UNLESS ->Executes code if conditional is false. If the conditional is true, code specified in the else clause is executed.
   
  x = 1 
  unless x>=2
     puts "x is less than 2"
   else
     puts "x is greater than 2"
  end
=>x is less than 2

#Case with Booleans
  
 1) case test_value
    when value
    #...
   else 
    #...
   end

 2)age =  5
  case $age
  when 0 .. 2
     puts "baby"
  when 3 .. 6
     puts "little child"
  when 7 .. 12
     puts "child"
  when 13 .. 18
     puts "youth"
  else
     puts "adult"
  end

  #loops
  
  #Iterators
   To say or d
   to apply a procedure repeatedly
   to prform a code on each item in a set 

Times, upto, downto, each
=>5.times {puts "Hello"}
=>1.upto(5) {puts "Hello"}
=>5.downto(1) {puts "Hello"}
=>(1..5).each {puts "Hello"}

#Map convert all the values of array in to perticular type 
 a.map(&:to_i)

